<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.clapp.dao.TicketDAO">
    <!-- 티켓 사용 내역 목록 -->
    <select id="getUserTicketUsedList" parameterType="ticketEntity" resultType="ticketEntity">
        SELECT
            um.USER_MASTER_KEY,
            um.USER_ID,
            FN_GET_COMMON_CODE_NAME('USER_TYPE', um.USER_TYPE) USER_TYPE,
            um.USER_NAME,
            ud.USER_COMPANY_NAME,
            vr.*,
            vd.*,
            vd.manufacturer DEVICE_MAKER_CODE
        FROM
            VIEW_RESERVATIONS vr ,
            VIEW_DEVICES vd,
            USER_MASTER um,
            USER_DETAIL ud
        WHERE
          vr.user_id = um.user_master_key
        AND
          um.user_master_key = ud.user_master_key
        AND
          vr.device_id = vd.id
        <if test="(startDate != '' and startDate != null) and (endDate != '' and endDate != null)">
            AND
            (
            vr.start_dttm BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            OR
            vr.end_dttm BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            )
        </if>
        <if test="searchValue != '' and searchValue != null">
            AND
            um.USER_TYPE = #{searchValue}
        </if>
        <if test="searchValue1 != '' and searchValue1 != null">
            AND
            vd.manufacturer= #{searchValue1}
        </if>
        <if test="searchValue2 != '' and searchValue2 != null">
            AND
            um.USER_ID LIKE CONCAT(#{searchValue2}, '%')
        </if>
        <if test="searchValue3 != '' and searchValue3 != null">
            AND
            (um.USER_NAME LIKE CONCAT(#{searchValue3}, '%') OR ud.USER_COMPANY_NAME LIKE CONCAT(#{searchValue3}, '%'))
        </if>
        ORDER BY
        start_dttm DESC
        LIMIT
        #{rowStartNumber}, #{pageListSize}
    </select>
    <!-- //티켓 사용 내역 목록 -->

    <!-- 이달의 티켓 사용 개수 합계 -->
    <select id="getTicketSum" parameterType="ticketEntity" resultType="ticketEntity">
        SELECT
          if(SUM(use_point) is null, 0, SUM(use_point)) ticketSum
        FROM
          VIEW_RESERVATIONS
        WHERE
          start_dttm
        BETWEEN
          DATE_FORMAT(NOW() ,'%Y-%m-01') AND last_day(now())
        OR
          end_dttm
        BETWEEN
          DATE_FORMAT(NOW() ,'%Y-%m-01') AND last_day(now())
    </select>
    <!-- //이달의 티켓 사용 개수 합계 -->

    <!-- 티켓 사용 내역 카운트 -->
    <select id="getUserTicketUsedCount" parameterType="ticketEntity" resultType="int">
        SELECT
        COUNT(*)
        FROM
            VIEW_RESERVATIONS vr ,
            VIEW_DEVICES vd,
            USER_MASTER um,
            USER_DETAIL ud
        WHERE
          vr.user_id = um.user_master_key
        AND
          um.user_master_key = ud.user_master_key
        AND
          vr.device_id = vd.id
        <if test="(startDate != '' and startDate != null) and (endDate != '' and endDate != null)">
            AND
            (
            vr.start_dttm BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            OR
            vr.end_dttm BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            )
        </if>
        <if test="searchValue != '' and searchValue != null">
            AND
            um.USER_TYPE = #{searchValue}
        </if>
        <if test="searchValue1 != '' and searchValue1 != null">
            AND
            vd.manufacturer= #{searchValue1}
        </if>
        <if test="searchValue2 != '' and searchValue2 != null">
            AND
            um.USER_ID LIKE CONCAT(#{searchValue2}, '%')
        </if>
        <if test="searchValue3 != '' and searchValue3 != null">
            AND
            (um.USER_NAME LIKE CONCAT(#{searchValue3}, '%') OR ud.USER_COMPANY_NAME LIKE CONCAT(#{searchValue3}, '%'))
        </if>
    </select>
    <!-- //티켓 사용 내역 카운트 -->

    <!-- 티켓 적용 서비스 목록 -->
    <select id="getTicketProductServiceList" parameterType="ticketEntity" resultType="ticketEntity">
        SELECT
          a.*
        FROM
        (
            SELECT
                TPAS.ticket_product_service_key,
                TPAS.SERVICE_APPLY_DATE,
                TPAS.SERVICE_PRODUCT_NAME,
                TPAS.SERVICE_APPLY_TICKET_AMOUNT,
                TPAS.SERVICE_APPLY_TICKET_TOTAL_AMOUNT,
                FN_GET_COMMON_CODE_NAME(
                'SERVICE_APPLY_REASON',
                TPAS.SERVICE_APPLY_REASON
                )SERVICE_APPLY_REASON,
                TPAS.SERVICE_APPLY_REASON_DETAIL,
                TPAS.SERVICE_APPLY_OPERATOR_NAME,
                FN_GET_COMMON_CODE_NAME(
                'SERVICE_TARGET_TYPE',
                TPAS.SERVICE_TARGET_TYPE
                )SERVICE_TARGET_TYPE,
                TPAS.SERVICE_TARGET_NAME,
                TPAS.SERVICE_INSERT_DATE,
                CASE(SERVICE_TARGET_TYPE)
                WHEN 1 THEN
                  'member_all'
                WHEN 2 THEN
                  'person_all'
                WHEN 3 THEN
                  'company_all'
                WHEN 4 THEN
                (
                    SELECT
                      um.USER_ID
                    FROM
                      USER_MASTER um
                    WHERE
                      um.USER_MASTER_KEY = ASU.USER_MASTER_KEY
                )
                ELSE
                  SERVICE_TARGET_NAME
                END AS USER_ID
            FROM
                TICKET_PRODUCT_APPLY_SERVICE TPAS,
                APPLY_SERVICE_USER ASU
            WHERE
              ASU.TICKET_PRODUCT_SERVICE_KEY = TPAS.TICKET_PRODUCT_SERVICE_KEY
            <if test="(startDate != '' and startDate != null) and (endDate != '' and endDate != null)">
                AND
                TPAS.SERVICE_APPLY_DATE BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            </if>
            <if test="searchValue != '' and searchValue != null">
                AND
                SERVICE_TARGET_TYPE = #{searchValue}
            </if>
            <if test="searchValue1 != '' and searchValue1 != null">
                AND
                SERVICE_APPLY_REASON = #{searchValue1}
            </if>
            <if test="searchValue3 != '' and searchValue3 != null">
                AND
                TPAS.SERVICE_TARGET_NAME = #{searchValue3}
            </if>
        )a
        WHERE
          SERVICE_INSERT_DATE IS NOT NULL
        <if test="searchValue2 != '' and searchValue2 != null">
            AND
            USER_ID = #{searchValue2}
        </if>
        GROUP BY
            TICKET_PRODUCT_SERVICE_KEY,
            USER_ID
        ORDER BY
          SERVICE_INSERT_DATE DESC
        LIMIT
        #{rowStartNumber}, #{pageListSize}
    </select>
    <!-- //티켓 적용 서비스 목록 -->

    <!-- 티켓 적용 서비스 카운트 -->
    <select id="getTicketProductServiceCount" parameterType="ticketEntity" resultType="int">
        SELECT
        count(*)
        FROM
        (
        SELECT
            TPAS.ticket_product_service_key,
            TPAS.SERVICE_APPLY_DATE,
            TPAS.SERVICE_PRODUCT_NAME,
            TPAS.SERVICE_APPLY_TICKET_AMOUNT,
            TPAS.SERVICE_APPLY_TICKET_TOTAL_AMOUNT,
            FN_GET_COMMON_CODE_NAME(
            'SERVICE_APPLY_REASON',
            TPAS.SERVICE_APPLY_REASON
            )SERVICE_APPLY_REASON,
            SERVICE_APPLY_REASON_DETAIL,
            TPAS.SERVICE_APPLY_OPERATOR_NAME,
            FN_GET_COMMON_CODE_NAME(
            'SERVICE_TARGET_TYPE',
            TPAS.SERVICE_TARGET_TYPE
            )SERVICE_TARGET_TYPE,
            TPAS.SERVICE_TARGET_NAME,
            TPAS.SERVICE_INSERT_DATE,
            CASE(SERVICE_TARGET_TYPE)
            WHEN 1 THEN
            'member_all'
            WHEN 2 THEN
            'person_all'
            WHEN 3 THEN
            'company_all'
            WHEN 4 THEN
            (
            SELECT
              um.USER_ID
            FROM
              USER_MASTER um
            WHERE
              um.USER_MASTER_KEY = ASU.USER_MASTER_KEY
            )
            ELSE
              SERVICE_TARGET_NAME
            END AS USER_ID
        FROM
            TICKET_PRODUCT_APPLY_SERVICE TPAS,
            APPLY_SERVICE_USER ASU
        WHERE
          ASU.TICKET_PRODUCT_SERVICE_KEY = TPAS.TICKET_PRODUCT_SERVICE_KEY
        <if test="(startDate != '' and startDate != null) and (endDate != '' and endDate != null)">
            AND
            TPAS.SERVICE_APPLY_DATE BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
        </if>
        <if test="searchValue != '' and searchValue != null">
            AND
            SERVICE_TARGET_TYPE = #{searchValue}
        </if>
        <if test="searchValue1 != '' and searchValue1 != null">
            AND
            SERVICE_APPLY_REASON = #{searchValue1}
        </if>
        <if test="searchValue3 != '' and searchValue3 != null">
            AND
            TPAS.SERVICE_TARGET_NAME = #{searchValue3}
        </if>
        GROUP BY
            ASU.TICKET_PRODUCT_SERVICE_KEY,
            user_id
        )a
        where
        SERVICE_INSERT_DATE is not null
        <if test="searchValue2 != '' and searchValue2 != null">
            AND
            USER_ID = #{searchValue2}
        </if>
    </select>
    <!-- 티켓 적용서비스 카운트 -->

    <!-- 티켓 적용서비스 신규 적용 -->
    <insert id="insertTicketProductService" parameterType="ticketEntity" useGeneratedKeys="true" keyProperty="ticketProductServiceKey">
        INSERT INTO TICKET_PRODUCT_APPLY_SERVICE
        (
            SERVICE_TARGET_TYPE,
            SERVICE_TARGET_NAME,
            SERVICE_APPLY_DATE,
            SERVICE_PRODUCT_NAME,
            SERVICE_APPLY_TICKET_AMOUNT,
            SERVICE_APPLY_TICKET_TOTAL_AMOUNT,
            SERVICE_APPLY_REASON,
            SERVICE_APPLY_REASON_DETAIL,
            SERVICE_APPLY_OPERATOR_NAME,
            SERVICE_INSERT_DATE,
            TICKET_START_EXPIRATION_DATE,
            TICKET_END_EXPIRATION_DATE,
            USER_TICKET_MASTER_KEY
        ) VALUES (
            #{serviceTargetType},
            <choose>
                <when test='serviceTargetType == 1'>
                    '회원 전체',
                </when>
                <when test='serviceTargetType == 2'>
                    '일반 전체',
                </when>
                <when test='serviceTargetType == 3'>
                    '기업/단체 전체',
                </when>
                <otherwise>
                    #{serviceTargetName},
                </otherwise>
            </choose>
                NOW(),
            #{serviceProductName},
            #{serviceApplyTicketAmount},
            #{serviceApplyTicketTotalAmount},
            #{serviceApplyReason},
            #{serviceApplyReasonDetail},
            #{serviceApplyOperatorName},
            NOW(),
            #{ticketStartExpirationDate},
            #{ticketEndExpirationDate},
            #{userTicketMasterKey}
        )
    </insert>
    <!-- //티켓 적용서비스 신규 적용 -->

    <!-- 서비스 티켓 적용 -->
    <insert id="selectUserType" parameterType="ticketEntity">
        INSERT INTO APPLY_SERVICE_USER
        (
            TICKET_PRODUCT_SERVICE_KEY,
            USER_MASTER_KEY
        )
        (
        SELECT
            #{ticketProductServiceKey},
            UM.USER_MASTER_KEY
        FROM
          TICKET_PRODUCT_APPLY_SERVICE TPAS, USER_MASTER UM
        WHERE
        <if test="serviceTargetType == 1">
            UM.USER_TYPE = '1' OR '2'
        </if>
        <if test="serviceTargetType == 2">
            UM.USER_TYPE = '1'
        </if>
        <if test="serviceTargetType == 3">
            UM.USER_TYPE = '2'
        </if>
        <if test="serviceTargetType == 4" >
            UM.USER_ID in
            <foreach item="userIdArr" index="index" collection="userIdArr" open="(" separator="," close=")">
                #{userIdArr}
            </foreach>
        </if>
        GROUP BY UM.USER_MASTER_KEY
        )
    </insert>
    <!-- //서비스 티켓 적용 -->
    <update id="modifyServiceTicketMaster" parameterType="ticketEntity">
        UPDATE
            USER_TICKET_MASTER
        SET
            <!--ticket_amount = ticket_amount + ${serviceApplyTicketAmount}-->
            ticket_avilable_amount = ticket_avilable_amount + ${serviceApplyTicketAmount}
            <!--ticket_end_expiration_date = date_add(ticket_end_expiration_date, interval +${expirationDate} day)-->
            <if test="ticketEndExpirationDate != '' and ticketEndExpirationDate != null">
              ,ticket_end_expiration_date = #{ticketEndExpirationDate}
            </if>
            <if test="userType == 2">
              <if test="serviceProductName != '' and serviceProductName != null">
                ,product_name = #{serviceProductName}
              </if>
              <if test="productMasterKey != '' and productMasterKey != null">
                ,product_master_key = #{productMasterKey}
              </if>
            </if>
        WHERE
          user_master_key in (
        SELECT
          user_master_key
        FROM
          USER_MASTER
        WHERE
            <if test="serviceTargetType == 1">
                USER_TYPE = '1' OR '2'
            </if>
            <if test="serviceTargetType == 2">
                USER_TYPE = '1'
            </if>
            <if test="serviceTargetType == 3">
                USER_TYPE = '2'
            </if>
            <if test="serviceTargetType == 4" >
                <!-- user_id in
              <foreach item="userIdArr" index="index" collection="userIdArr" open="(" separator="," close=")">
                 #{userIdArr}
              </foreach> -->
                user_id = #{userId}

            </if>
        )
        <if test="userTicketMasterKey != '' and userTicketMasterKey != null">
            and user_ticket_master_key=#{userTicketMasterKey}
        </if>
        <!-- AND
         use_yn = 'Y'-->
    </update>
    <!-- //서비스 티켓 적용 -->
    <update id="returnTicket" parameterType="ticketEntity">
        UPDATE
         USER_TICKET_MASTER
        SET
            ticket_avilable_amount = ticket_avilable_amount + ${serviceApplyTicketAmount}
        WHERE
          user_master_key  = #{userMasterKey}
        AND
        use_yn = 'Y'
        order by ticket_start_expiration_date asc limit 1
    </update>
    <insert id="insertServiceTicketHistory" parameterType="ticketEntity">
        INSERT INTO
        USER_TICKET_HISTORY
        (
            target_key,
            user_master_key,
            product_master_key,
            product_name,
            ticket_avilable_amount,
            ticket_start_expiration_date,
            ticket_end_expiration_date,
            ticket_apply_date,
            insert_date
        )  (
            SELECT
                #{ticketProductServiceKey},
                utm.user_master_key,
                    utm.product_master_key,
                    utm.product_name,
                <!-- FN_GET_COMMON_CODE_NAME('SERVICE_APPLY_REASON', #{serviceApplyReason}), -->
                #{serviceApplyTicketAmount},
        --         date_add(utm.ticket_end_expiration_date, interval +1 day),
        --         date_add(utm.ticket_end_expiration_date, interval +${expirationDate} day),
                    utm.ticket_start_expiration_date,
                    <choose>
                        <when test="ticketEndExpirationDate != null and ticketEndExpirationDate != ''">
                            DATE_FORMAT(#{ticketEndExpirationDate}, '%Y/%m/%d %H:%i'),
                        </when>
                        <otherwise>
                            utm.ticket_end_expiration_date,
                        </otherwise>
                    </choose>
                    NOW(),
                NOW()
            FROM
                USER_TICKET_MASTER utm,
                USER_MASTER um
            WHERE
              utm.user_master_key = um.user_master_key
            AND
            <if test="serviceTargetType == 1">
                um.USER_TYPE = '1' OR '2'
            </if>
            <if test="serviceTargetType == 2">
                um.USER_TYPE = '1'
            </if>
            <if test="serviceTargetType == 3">
                um.USER_TYPE = '2'
            </if>
            <if test="serviceTargetType == 4" >
                <!-- um.user_id in
               <foreach item="userIdArr" index="index" collection="userIdArr" open="(" separator="," close=")">
                  #{userIdArr}
               </foreach> -->
                um.user_id = #{userId}
            </if>
        order BY
          utm.user_ticket_master_key DESC
        limit 1
        )
    </insert>
    <select id="getUserTypeCount" parameterType="ticketEntity" resultType="int">
        SELECT
          COUNT(*)
        FROM
          USER_MASTER
        WHERE
        <if test="serviceTargetType == 1">
            USER_TYPE = '1' OR '2'
        </if>
        <if test="serviceTargetType == 2">
            USER_TYPE = '1'
        </if>
        <if test="serviceTargetType == 3">
            USER_TYPE = '2'
        </if>
    </select>

    <!-- UserTicketMaster 사용여부 변경 -->
    <update id="modifyUserTicketMasterUse" parameterType="ticketEntity" >
        UPDATE
          USER_TICKET_MASTER
        SET
          use_yn = #{useYn}
        <if test="ticketAvilableAmount == 0">
            ,ticket_avilable_amount =${ticketAvilableAmount}
        </if>
        ,modify_date = NOW()
        WHERE
          user_master_key = #{userMasterKey}
          <if test='useYn == "Y"'>
          ORDER BY user_ticket_master_key DESC limit 1

        </if>
        <if test='useYn == "N"'>
            and user_ticket_master_key =  #{userTicketMasterKey}

        </if>
    </update>
    <!-- UserTicketMaster 사용여부 변경 -->
    <!-- 회원 티켓 발급 -->
    <insert id="insertUserTicketMaster" parameterType="ticketEntity" useGeneratedKeys="true" keyProperty="ticketProductServiceKey">
        INSERT INTO USER_TICKET_MASTER
        (
            user_master_key,
            product_master_key,
            payment_tid,
            product_name,
            ticket_amount,
            ticket_avilable_amount,
            ticket_start_expiration_date,
            ticket_end_expiration_date,
            ticket_apply_date,
            insert_date,
            use_yn
        ) VALUES (
            #{userMasterKey},
            #{productMasterKey},
            <choose>
                <when test="paymentTid != null and paymentTid != ''">
                    #{paymentTid},
                </when>
                <otherwise>
                    0,
                </otherwise>
            </choose>
            #{productName},
            #{ticketAmount},
            #{ticketAvilableAmount},
            #{ticketStartExpirationDate},
            #{ticketEndExpirationDate},
            now(),
            now(),
            #{useYn}
        )
    </insert>
    <!-- 사용가능 티켓수 조회 -->
    <select id="getAvailableTicket" parameterType="ticketEntity" resultType="ticketEntity">
        SELECT
          *
        FROM
          USER_TICKET_MASTER
        WHERE
          user_master_key = #{userMasterKey}
        AND
        (
        LEFT(NOW(),10)
        BETWEEN
        LEFT(ticket_start_expiration_date,10)
        AND
        IF(ticket_end_expiration_date IS NULL, NOW(), LEFT(ticket_end_expiration_date,10))
        )
       <!-- AND
          USE_YN  ='Y'-->
        order by user_ticket_master_key desc limit 1

    </select>
    <!-- //사용가능 티켓수 조회 -->
    <!-- 사용자 티켓 사용우선순위가 위인 티켓키와 사용가능 티켓 조회 -->
    <select id="getPrioritieTicketKey" parameterType="memberEntity" resultType="ticketEntity">
        SELECT
            um.user_ticket_master_key,
            um.user_master_key,
            um.ticket_avilable_amount,
            um.product_master_key
        FROM
            USER_TICKET_MASTER um,
            PRODUCT_MASTER pm
        WHERE
          um.product_master_key = pm.product_master_key
        AND
          um.user_master_key = #{userMasterKey}
        <!--AND
        (
        LEFT(NOW(),10)
        BETWEEN
        LEFT(ticket_start_expiration_date,10)
        AND
          IF(ticket_end_expiration_date IS NULL, NOW(), LEFT(ticket_end_expiration_date,10))
        )-->
        and ticket_end_expiration_date > now()
        AND
          um.ticket_avilable_amount > 0
        AND
          um.use_yn = 'Y'
        ORDER BY
          product_type asc, LEFT(ticket_end_expiration_date,10) ASC
        LIMIT 1
    </select>
    <!-- //사용자 티켓 사용우선순위가 위인 티켓키 조회 -->
    <!-- 사용자 티켓 차감 /반환 처리 -->
    <update id="doUsedTicket" parameterType="ticketEntity">
        UPDATE
          USER_TICKET_MASTER
        SET
          ticket_avilable_amount = #{ticketAvilableAmount}
        WHERE
          user_master_key = #{userMasterKey}
        <!--AND
          use_yn = 'Y'-->
        <if test="userTicketMasterKey != '' and userTicketMasterKey != null">
        AND
         user_ticket_master_key = #{userTicketMasterKey}
        </if>

         ORDER BY user_ticket_master_key Desc

         limit 1

    </update>
    <!-- //사용자 티켓 차감 처리 -->
    <!-- 사용자티켓 사용 히스토리 -->
    <insert id="insertUsedTicketHistory" parameterType="ticketEntity">
        INSERT INTO
        USER_TICKET_USED_HISTORY
        (
            target_key,
            user_master_key,
            history_start_used_time,
            history_end_used_time,
            history_used_ticket_amount,
            history_used_state,
            device_key
        ) VALUES (
            #{userTicketMasterKey},
            #{userMasterKey},
            now(),
            now(),
            #{historyUsedTicketAmount},
            1,
            #{deviceKey}
        )
    </insert>
    <!--// 사용자티켓 사용 히스토리 -->
    <!-- 자신이 소유한 티켓정보를 불러온다 -->
    <select id="selectTicketInfo" parameterType="ticketEntity" resultType="ticketentity">
        SELECT
            user_ticket_master_key,
            user_master_key,
            product_master_key,
            product_name,
            payment_tid,
            ticket_amount,
            if(0 > ticket_avilable_amount, 0, ticket_avilable_amount) ticket_avilable_amount,
            ticket_start_expiration_date,
            ticket_end_expiration_date,
            ticket_apply_date,
            insert_date,
            TO_DAYS(ticket_end_expiration_date) - TO_DAYS(now()) as expirationDate
        FROM
          USER_TICKET_MASTER
        WHERE
          user_master_key = #{userMasterKey}
        and
          use_yn = 'Y'
        order BY
          user_ticket_master_key DESC
        limit 1

    </select>
    <!-- //자신이 소유한 티켓정보를 불러온다 -->
    <!-- 사용자 티켓 수정 -->
    <update id="modifyUserTicketMaster" parameterType="ticketEntity">
        UPDATE
          USER_TICKET_MASTER
        SET
            product_master_key = #{productMasterKey},
            product_name = #{productName},
            payment_tid = #{paymentTid},
            <!--ticket_amount = #{ticketAmount},-->
            ticket_avilable_amount = #{ticketAvilableAmount},
            ticket_start_expiration_date =#{ticketStartExpirationDate},
            ticket_end_expiration_date =#{ticketEndExpirationDate},
            ticket_apply_date = #{ticketApplyDate},
            modify_date = now()
        WHERE
          user_master_key = #{userMasterKey}
        AND
          use_yn = 'Y'
    </update>
    <!-- //사용자 티켓 수정 -->
    <!-- 결제 취소시 사용자 user_ticket_master 삭제 -->
    <delete id="deleteUserTicketMaster" parameterType="ticketEntity">
        DELETE FROM USER_TICKET_MASTER where user_master_key = #{userMasterKey} and payment_tid = #{paymentTid}
    </delete>
    <!-- 결제 취소시 사용자 user_ticket_master 삭제 -->
    <!-- 티켓 사용 히스토리 -->
    <select id="selectTicketUsedHistoryCount" parameterType="ticketEntity" resultType="ticketEntity">
        SELECT
        COUNT(*) historyCount,
        COUNT(IF((`vr`.`status` IN (1)), 1, NULL)) useCount,
        COUNT(IF((`vr`.`status` in (0,6) AND vr.end_dttm > NOW()), 1, null)) reservationWaitCount,
        COUNT(IF((`vr`.`status` In(2,3) AND vr.end_dttm <![CDATA[ < ]]> NOW()), 1, null)) reservationFinishCount
        FROM
        VIEW_RESERVATIONS vr,
        VIEW_DEVICES vd
        WHERE
        vr.device_id = vd.id
        AND
        user_id = #{userMasterKey}
        <if test="(startDate != '' and startDate != null) and (endDate != '' and endDate != null)">
            AND
            (
            vr.start_dttm BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            )
        </if>
        <if test="searchValue != '' and searchValue != null">
            AND
            vd.manufacturer = #{searchValue}
        </if>
        <if test="searchValue1 != '' and searchValue1 != null">
            AND
            vd.prod_name = #{searchValue1}
        </if>
        <if test="searchValue2 != '' and searchValue2 != null">
            AND
            <choose>
                <when test="searchValue2 == 'wait'">
                    vr.status in (0,6)
                    AND
                    vr.end_dttm <![CDATA[ > ]]> NOW()
                </when>
                <otherwise>
                    vr.end_dttm <![CDATA[ < ]]> NOW()
                </otherwise>
            </choose>
        </if>
        <if test="searchValue3 != '' and searchValue3 != null">
            AND
            vr.product_name = #{searchValue3}
        </if>
    </select>
    <select id="selectTicketUsedHistory" parameterType="ticketEntity" resultType="ticketEntity">
        SELECT
            vr.id,
            vr.user_id,
            vr.device_id,
            vr.reservation_no,
            vr.reserve_time,
            vr.duration,
            vr.start_dttm,
            vr.end_dttm,
            vr.canceled,
            vr.reg_dttm,
            vr.updt_dttm,
            vr.use_point,
            vr.status,

            <!-- FN_GET_COMMON_CODE_NAME('RESERVATION_STATUS',  vr.status) statusText, -->
            (
            CASE
            WHEN (vr.status = '0') THEN '예약중'
            WHEN (vr.status = '1') THEN '사용중'
            WHEN ((vr.status = '2') AND (NOW() <![CDATA[<=]]> vr.end_dttm)) THEN '대기중'
            WHEN ((vr.status = '2') AND (NOW() > vr.end_dttm)) THEN '사용종료'
            WHEN (vr.status  = '3') THEN '사용종료'
            ELSE '' END
            ) AS statusText,
            vd.manufacturer,
            vd.prod_name,
            vd.os,
            vd.resolution,
            vd.os_version,
            vr.product_name
        FROM
            VIEW_RESERVATIONS vr,
            VIEW_DEVICES vd
        WHERE
          vr.device_id = vd.id
        AND
          user_id = #{userMasterKey}
        <if test="(startDate != '' and startDate != null) and (endDate != '' and endDate != null)">
            AND
            (
            vr.start_dttm BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            )
        </if>
        <if test="searchValue != '' and searchValue != null">
            AND
            vd.manufacturer = #{searchValue}
        </if>
        <if test="searchValue1 != '' and searchValue1 != null">
            AND
            vd.prod_name = #{searchValue1}
        </if>
        <!--<if test="searchValue2 != '' and searchValue2 != null">-->
            <!--AND-->
            <!--vr.status = #{searchValue2}-->
        <!--</if>-->
        <if test="searchValue2 != '' and searchValue2 != null">
            AND
            <choose>
                <when test="searchValue2 == 'wait'">
                    vr.status in (0,6)
                    AND
                    vr.end_dttm <![CDATA[ > ]]> NOW()
                </when>
                <otherwise>
                    vr.end_dttm <![CDATA[ < ]]> NOW()
                </otherwise>
            </choose>
        </if>
        <if test="searchValue3 != '' and searchValue3 != null">
            AND
            vr.product_name = #{searchValue3}
        </if>
        ORDER BY
            vr.start_dttm desc
            LIMIT
            #{rowStartNumber}, #{pageListSize}
    </select>
    <!-- //티켓 사용 히스토리 -->

    <!-- 티켓 적립/차감 히스토리 -->
    <select id="getMyHistoryCount" parameterType="ticketEntity" resultType="int">
        SELECT
        COUNT(a.ticketApplyDate) historyCount
        FROM (
        <!-- SELECT
            payment_start_date ticketApplyDate,
            '적립' statusText,
            payment_ticket_amount,
            payment_end_date ticketEndExpirationDate,
            payment_product_name,
            user_master_key
        FROM
            PAYMENT_MASTER
        WHERE
            user_master_key = #{userMasterKey}

        UNION ALL

        SELECT
        ticket_apply_date ticketApplyDate,
        '적립' statusText,
        ticket_avilable_amount historyUsedTicketAmountText,
        ticket_start_expiration_date ticketStartExpirationDate,
        ticket_end_expiration_date ticketEndExpirationDate,
        product_name productName,
        user_master_key
        FROM
        USER_TICKET_HISTORY
        WHERE
        user_master_key = #{userMasterKey}

        UNION ALL-->
        SELECT
            ticket_apply_date ticketApplyDate,
            '적립' statusText,
            ticket_amount historyUsedTicketAmountText,

            ticket_start_expiration_date ticketStartExpirationDate,
            ticket_end_expiration_date ticketEndExpirationDate,
            product_name productName,
            '상품구매' service_apply_reason,
            '' service_apply_reason_detail ,
            user_master_key
        FROM
         USER_TICKET_MASTER
        WHERE
          user_master_key = #{userMasterKey}
        <if test="(startDate != '' and startDate != null) and (endDate != '' and endDate != null)">
            AND
            (
            ticket_start_expiration_date BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            OR
            ticket_end_expiration_date BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            )
        </if>
        <if test="searchValue != '' and searchValue != null">
            AND

            '적립' = #{searchValue}
        </if>
        <if test="searchValue2 != '' and searchValue2 != null">
            AND
            product_name = #{searchValue2}
        </if>
        <if test="userTicketMasterKey != '' and userTicketMasterKey != null">
            AND
            user_ticket_master_key = #{userTicketMasterKey}
        </if>
        UNION ALL

        SELECT
            service_apply_date ticketApplyDate,

            IF (
            service_apply_ticket_amount > 0,
            if(service_apply_reason > 6, '반환','적립'),
            '차감'
            ) AS statusText,
            service_apply_ticket_amount historyUsedTicketAmountText,
            tr.ticket_start_expiration_date ticketStartExpirationDate,
            tr.ticket_end_expiration_date ticketEndExpirationDate,
            tr.service_product_name productName,
            FN_GET_COMMON_CODE_NAME (
            'SERVICE_APPLY_REASON',
            service_apply_reason
            ) service_apply_reason,
            service_apply_reason_detail ,
            au.user_master_key
        FROM
            TICKET_PRODUCT_APPLY_SERVICE tr
        INNER JOIN
            APPLY_SERVICE_USER au on tr.ticket_product_service_key = au.ticket_product_service_key
        LEFT OUTER JOIN
            USER_TICKET_MASTER ut on tr.user_ticket_master_key = ut.user_ticket_master_key
        WHERE
          au.user_master_key = #{userMasterKey}
        <if test="(startDate != '' and startDate != null) and (endDate != '' and endDate != null)">
            AND
            (
            tr.ticket_start_expiration_date BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            OR
            tr.ticket_end_expiration_date BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            )
        </if>
        <if test="searchValue != '' and searchValue != null">
            AND
            IF (
            service_apply_ticket_amount > 0,
            if(service_apply_reason > 6, '반환','적립'),
            '차감'
            ) = #{searchValue}
        </if>
        <if test="searchValue2 != '' and searchValue2 != null">
            AND
            tr.service_product_name = #{searchValue2}
        </if>
        <if test="userTicketMasterKey != '' and userTicketMasterKey != null">
            AND
           ut.user_ticket_master_key = #{userTicketMasterKey}
        </if>
        UNION ALL

        SELECT
            reserve_time,
            '차감' statusText,
            use_point,
            start_dttm,
            end_dttm,
            vr.product_name,
            '-' service_apply_reason,
            '' service_apply_reason_detail,
            vr.user_id
        FROM
            VIEW_RESERVATIONS vr,
            VIEW_DEVICES vd
        WHERE
          vr.device_id = vd.id
        AND
          vr.user_id = #{userMasterKey}
        <if test="(startDate != '' and startDate != null) and (endDate != '' and endDate != null)">
            AND
            (
                start_dttm BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
                OR
            end_dttm BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            )
        </if>
        <if test="searchValue != '' and searchValue != null">
            AND
             '차감' = #{searchValue}
        </if>
        <if test="searchValue2 != '' and searchValue2 != null">
            AND
            product_name = #{searchValue2}
        </if>
        <if test="userTicketMasterKey != '' and userTicketMasterKey != null">
            AND
             vr.user_ticket_master_key = #{userTicketMasterKey}
        </if>
        ) a
        WHERE
        a.user_master_key = #{userMasterKey}

    </select>
    <select id="getMyHistory" parameterType="ticketEntity" resultType="ticketEntity">
        SELECT
        a.*
        FROM (
        <!-- SELECT
            payment_start_date ticketApplyDate,
            '적립' statusText,
            payment_ticket_amount,
            payment_end_date ticketEndExpirationDate,
            payment_product_name,
            user_master_key
        FROM
            PAYMENT_MASTER
        WHERE
            user_master_key = #{userMasterKey}

        UNION ALL

        SELECT
        ticket_apply_date ticketApplyDate,
        '적립' statusText,
        ticket_avilable_amount historyUsedTicketAmountText,
        ticket_start_expiration_date ticketStartExpirationDate,
        ticket_end_expiration_date ticketEndExpirationDate,
        product_name productName,
        '' service_apply_reason,
        '' service_apply_reason_detail,
        user_master_key
        FROM
        USER_TICKET_HISTORY
        WHERE
        user_master_key = #{userMasterKey}

        UNION ALL-->
        SELECT
            ticket_apply_date ticketApplyDate,
            '적립' statusText,
           <!-- ticket_amount historyUsedTicketAmountText,-->
            if(product_master_key = 1, ticket_amount*5, ticket_amount*5) historyUsedTicketAmountText,
            ticket_avilable_amount ticketAvilableAmount,
            ticket_start_expiration_date ticketStartExpirationDate,
            ticket_end_expiration_date ticketEndExpirationDate,
            product_name productName,
            if(product_master_key = 1, '가입이벤트','상품구매') service_apply_reason,
            '' service_apply_reason_detail ,
            user_master_key,
            user_ticket_master_key
        FROM
            USER_TICKET_MASTER
        WHERE
          user_master_key = #{userMasterKey}

        UNION ALL

        SELECT
            service_apply_date ticketApplyDate,
            IF (
                service_apply_ticket_amount > 0,
                if(service_apply_reason > 6, '반환','적립'),
                '차감'
            ) AS statusText,
            <!--service_apply_ticket_amount historyUsedTicketAmountText,-->
            IF(service_apply_reason > 6,service_apply_ticket_amount, service_apply_ticket_amount*5)
            as historyUsedTicketAmountText,
            ut.ticket_avilable_amount ticketAvilableAmount,
            tr.ticket_start_expiration_date ticketStartExpirationDate,
            tr.ticket_end_expiration_date ticketEndExpirationDate,
            tr.service_product_name productName,
            FN_GET_COMMON_CODE_NAME (
            'SERVICE_APPLY_REASON',
            service_apply_reason
            ) service_apply_reason,
            service_apply_reason_detail ,
            au.user_master_key,
            ut.user_ticket_master_key
        FROM
            TICKET_PRODUCT_APPLY_SERVICE tr
        INNER JOIN
          APPLY_SERVICE_USER au on tr.ticket_product_service_key = au.ticket_product_service_key
        LEFT OUTER JOIN
          USER_TICKET_MASTER ut on tr.user_ticket_master_key = ut.user_ticket_master_key
        WHERE au.user_master_key = #{userMasterKey}

        UNION ALL

        SELECT
            vr.reserve_time,
            '차감' ,
            use_point,
        (select utm.ticket_avilable_amount from user_ticket_master utm where utm.user_ticket_master_key=vr.user_ticket_master_key) ticketAvilableAmount,
            <!--'' ticketAvilableAmount,-->
            vr.start_dttm,
            vr.end_dttm,
            vr.product_name,
            if(now() > vr.start_dttm, '시간 사용', '디바이스 예약') service_apply_reason,
            <!--if(vr.start_dttm - vra.del_dttm >= 24, if(now() > vr.start_dttm, '티켓사용', '디바이스 예약'), '당일 예약취소') service_apply_reason,-->
            CONCAT(vd.prod_name,'/',concat(vr.start_dttm,'~',vr.end_dttm)) service_apply_reason_detail,
            vr.user_id,
            vr.user_ticket_master_key
        FROM
            VIEW_RESERVATIONS vr
            ,VIEW_DEVICES vd
            <!--,system.v_reservations_all vra-->
        WHERE
            vr.device_id = vd.id
        <!--AND
            vr.id = vra.id-->
        <!--         AND
                 vr.status != 3-->
        AND
        vr.user_id = #{userMasterKey}
        ) a
        WHERE
        a.user_master_key = #{userMasterKey}
        <if test="(startDate != '' and startDate != null) and (endDate != '' and endDate != null)">
            AND
            (
            a.ticketStartExpirationDate BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            OR
            a.ticketEndExpirationDate BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(ADDDATE(#{endDate},+1), '%Y-%m-%d')
            )
        </if>
        <if test="searchValue != '' and searchValue != null">
            AND
            a.statusText = #{searchValue}
        </if>
        <if test="searchValue2 != '' and searchValue2 != null">
            AND
            a.productName = #{searchValue2}
        </if>
        <if test="userTicketMasterKey != '' and userTicketMasterKey != null">
            AND
            a.user_ticket_master_key = #{userTicketMasterKey}
        </if>
        ORDER BY
        ticketApplyDate DESC
        <!--ticketStartExpirationDate DESC-->
        LIMIT
        #{rowStartNumber}, #{pageListSize}
    </select>
    <!-- //티켓 사용 히스토리 -->

    <!-- 사용자 티켓 히스토리에 저장 -->
    <insert id="insertUserTicketHistory" parameterType="ticketEntity" >
        INSERT INTO
            USER_TICKET_HISTORY (
            target_key,
            user_master_key,
            product_master_key,
            product_name,
            ticket_avilable_amount,
            ticket_start_expiration_date,
            ticket_end_expiration_date,
            ticket_apply_date,
            insert_date
        ) VALUES (
            #{targetKey},
            #{userMasterKey},
            #{productMasterKey},
            #{productName},
            #{ticketAvilableAmount},
            #{ticketStartExpirationDate},
            #{ticketEndExpirationDate},
            #{ticketApplyDate},
            now()
        )
    </insert>
    <!--  // 사용자 티켓 히스토리에 저장 -->

    <!-- 사용자 티켓 히스토리 삭제 -->
    <delete id="removeUserTicketHistory" parameterType="ticketEntity" >
        DELETE
        FROM
          USER_TICKET_HISTORY
        WHERE
          target_key = #{targetKey}
    </delete>
    <!-- //사용자 티켓 히스토리 삭제 -->

    <!-- 자신이 티켓정보 히스토리를 불러온다 -->
    <select id="selectTicketHistoryList" parameterType="ticketEntity" resultType="ticketentity">
       <!-- SELECT
            uth.user_ticket_history_key,
            uth.user_master_key,
            uth.product_master_key,
            uth.ticket_amount,
            uth.product_name,
            uth.ticket_avilable_amount,
            uth.ticket_start_expiration_date,
            uth.ticket_end_expiration_date,
            uth.ticket_apply_date,
            uth.insert_date,
            TO_DAYS(uth.ticket_end_expiration_date) - TO_DAYS(now()) as expirationDate,
            (ifnull((select sum(vr.use_point) FROM VIEW_RESERVATIONS AS vr WHERE vr.user_id = uth.user_master_key AND vr.product_name =uth.product_name), 0)) as usePoint
        FROM
            USER_TICKET_HISTORY AS uth
        WHERE
            uth.user_master_key = #{userMasterKey}
        AND
          uth.target_key > 0
        ORDER BY
	   		uth.ticket_start_expiration_date desc-->
        SELECT
            uth.user_ticket_master_key,
            uth.user_master_key,
            uth.product_master_key,
            uth.ticket_amount,
            uth.product_name,
            uth.ticket_avilable_amount,
            uth.ticket_start_expiration_date,
            uth.ticket_end_expiration_date,
            uth.ticket_apply_date,
            uth.insert_date,
            if(use_yn = 'N' , 0, TO_DAYS(uth.ticket_end_expiration_date) - TO_DAYS(now())) as expirationDate,
            (ifnull((select sum(vr.use_point) FROM VIEW_RESERVATIONS AS vr WHERE vr.user_id = uth.user_master_key AND vr.user_ticket_master_key = uth.user_ticket_master_key), 0)) as usePoint,
            <!--uth.ticket_amount - uth.ticket_avilable_amount usePoint,-->
            if(uth.ticket_avilable_amount > 0,
                if(use_yn = 'Y' and TO_DAYS(uth.ticket_end_expiration_date) - TO_DAYS(now()) > 0,
                  if(TO_DAYS(uth.ticket_start_expiration_date) - TO_DAYS(now()) > 0,
                    '사용대기', '사용중'),
                  '사용종료'), '사용종료') useYn
        FROM
          USER_TICKET_MASTER uth
        WHERE
          user_master_key = #{userMasterKey}
        <if test="productMasterKey != '' and productMasterKey != null">
            and product_master_key =#{productMasterKey}
        </if>
        ORDER BY
          uth.insert_date desc
    </select>
    <!-- //자신이 티켓정보 히스토리를 불러온다 -->

    <!-- 자신이 취소할 티켓정보 히스토리를 불러온다 -->
    <select id="selectTicketHistory" parameterType="ticketEntity" resultType="ticketentity">
        SELECT
            user_ticket_history_key,
            user_master_key,
            product_master_key,
            product_name,
            ticket_avilable_amount,
            ticket_start_expiration_date,
            ticket_end_expiration_date,
            ticket_apply_date,
            insert_date,
            TO_DAYS(ticket_end_expiration_date) - TO_DAYS(ticket_start_expiration_date) as expirationDate
        FROM
            USER_TICKET_HISTORY
        WHERE
            target_key = #{targetKey}
        ORDER BY
          user_ticket_history_key DESC
        limit 1
    </select>
    <!-- //자신이 취소할 티켓정보 히스토리를 불러온다 -->

    <!-- 자신이 취소할 티켓 히스토리의 다음 히스토리를 불러온다 -->
    <select id="nextTicketHistoryInfo" parameterType="ticketEntity" resultType="ticketEntity">
        SELECT
            user_ticket_history_key,
            user_master_key,
            product_master_key,
            product_name,
            ticket_avilable_amount,
            ticket_start_expiration_date,
            ticket_end_expiration_date,
            ticket_apply_date,
            insert_date,
            TO_DAYS(ticket_end_expiration_date) - TO_DAYS(now()) as expirationDate
        FROM
            USER_TICKET_HISTORY
        WHERE
            user_master_key = #{userMasterKey}
        ORDER BY insert_date DESC
            LIMIT 1,1
    </select>
    <!-- //자신이 취소할 티켓 히스토리의 다음 히스토리를 불러온다 -->

    <!-- 결제취소시 사용자 티켓 수정 -->
    <update id="modifyUserTicket" parameterType="ticketEntity">
        UPDATE
        USER_TICKET_MASTER
        SET
        ticket_amount = #{ticketAmount},
        ticket_avilable_amount = #{ticketAvilableAmount},
        <if test="ticketStartExpirationDate != '' and ticketStartExpirationDate != null">
            ticket_start_expiration_date =  #{ticketStartExpirationDate},
        </if>
        ticket_end_expiration_date = #{ticketEndExpirationDate},
        product_name = #{productName},
        modify_date = now()
        WHERE
        user_master_key = #{userMasterKey}
        AND
          use_yn = 'y'
    </update>
    <!-- //결제취소시 사용자 티켓 수정 -->
    <update id="updateUserType" parameterType="paymentEntity">
        UPDATE USER_MASTER UM, USER_DETAIL UD SET
          UM.USER_TYPE = 2
        <if test="contractCompanyName != '' and contractCompanyName != null">
            ,UD.USER_COMPANY_NAME = #{contractCompanyName}
        </if>
        <if test="contractCompanyNumber != '' and contractCompanyNumber != null">
            ,UD.USER_COMPANY_NUMBER = #{contractCompanyNumber}
        </if>
        WHERE
           UM.USER_MASTER_KEY = UD.USER_MASTER_KEY
        AND UM.USER_MASTER_KEY in
            <foreach item="item" index="index" collection="userMasterKeyArr" open="(" separator="," close=")">
                #{item}
            </foreach>
    </update>
    <select id="selectTimeDiff" parameterType="int" resultType="int">
        SELECT
            SUBSTRING_INDEX(TIMEDIFF(start_dttm, NOW()),':', 1) difftime
        FROM
            system.v_reservations_all
        WHERE
            id = #{reservation_id}
    </select>
    <!-- 티켓 사용 내역 카운트 -->
    <select id="chkReservation" parameterType="int" resultType="int">
      SELECT
        COUNT(*)
      FROM
        system.v_reservations_all
      WHERE
        id = #{reservation_id}
    </select>
    <select id="getUserTicketProductList" parameterType="ticketEntity" resultType="ticketEntity">
        SELECT
        user_ticket_master_key,
        user_master_key,
        product_master_key,
        product_name,
        payment_tid,
        ticket_amount,
        ticket_avilable_amount,
        ticket_apply_date,
        insert_date,
        modify_date,
        use_yn,
        DATE_FORMAT(ticket_start_expiration_date, '%Y/%m/%d %H:%i') ticketStartDate,
        DATE_FORMAT(ticket_end_expiration_date, '%Y/%m/%d %H:%i') ticketEndDate,
        (select product_type from product_master where product_master.product_master_key = user_ticket_master.product_master_key) as serviceTargetType
        FROM USER_TICKET_MASTER
        <if test="userMasterKey != '' and userMasterKey != null">
        WHERE USER_MASTER_KEY=#{userMasterKey}
        </if>
        <if test="userTicketMasterKey != '' and userTicketMasterKey != null">
            WHERE USER_TICKET_MASTER_KEY=#{userTicketMasterKey}
        </if>
        <if test="productMasterKey != null and productMasterKey != ''">
          AND PRODUCT_MASTER_KEY in (${productMasterKey})
        </if>
        AND USE_YN='Y'
        AND ticket_end_expiration_date >= NOW();
    </select>
</mapper>
